{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Call.js"],"names":["query","Home","props","markdown","data","allMarkdownRemark","edges","json","allFeaturesJson","bodyClass","title","name","content","className","button","map","edge","key","node","frontmatter","path","to","excerpt","id","image","src","withPrefix","description","Call","href","site","siteMetadata","contact","phone","email","render"],"mappings":"2FAAA,2IAkFaA,EAAK,YA+BHC,UA1GF,SAACC,GACZ,IAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,MACxCC,EAAOL,EAAME,KAAKI,gBAAgBF,MACxC,OACE,kBAAC,IAAD,CAAQG,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,KACE,0BACEC,KAAK,cACLC,QAAQ,yKAGZ,yBAAKC,UAAU,cACb,yBAAKA,UAAU,aACb,oEACA,8KAOJ,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAMC,QAAM,KAGd,yBAAKD,UAAU,2BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,0BAAd,iBAEDV,EAASY,KAAI,SAAAC,GAAI,OAChB,yBAAKC,IAAKD,EAAKE,KAAKC,YAAYC,KAAMP,UAAU,wBAC9C,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,gBACb,4BACE,kBAAC,IAAD,CAAMQ,GAAIL,EAAKE,KAAKC,YAAYC,MAAOJ,EAAKE,KAAKC,YAAYT,QAE/D,2BAAIM,EAAKE,KAAKI,eAKtB,yBAAKT,UAAU,sBACb,kBAAC,IAAD,CAAMA,UAAU,6BAA6BQ,GAAG,aAAhD,wBAON,yBAAKR,UAAU,uCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,0BAAd,iBAEDN,EAAKQ,KAAI,SAAAC,GAAI,OACZ,yBAAKC,IAAKD,EAAKE,KAAKK,GAAIV,UAAU,iCAChC,yBAAKA,UAAU,WACZG,EAAKE,KAAKM,OACT,yBAAKX,UAAU,iBACb,yBAAKY,IAAKC,YAAWV,EAAKE,KAAKM,UAGnC,wBAAIX,UAAU,iBAAiBG,EAAKE,KAAKR,OACzC,yBAAKG,UAAU,mBAAmBG,EAAKE,KAAKS,uB,mFCrEtDC,EAAO,SAAA1B,GAAK,OAChB,yBAAKW,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACb,2CACA,uBAAGgB,KAAI,OAAS3B,EAAME,KAAK0B,KAAKC,aAAaC,QAAQC,OACpD/B,EAAME,KAAK0B,KAAKC,aAAaC,QAAQC,QAGxC,yBAAKpB,UAAU,cACb,2CACA,uBAAGgB,KAAI,UAAY3B,EAAME,KAAK0B,KAAKC,aAAaC,QAAQE,OACrDhC,EAAME,KAAK0B,KAAKC,aAAaC,QAAQE,SAI3ChC,EAAMY,QACL,yBAAKD,UAAU,mBACb,uBAAGgB,KAAK,WAAWhB,UAAU,UAA7B,cAQO,aAAAX,GAAK,OAClB,kBAAC,IAAD,CACEF,MAAK,aAcLmC,OAAQ,SAAA/B,GAAI,OAAI,kBAACwB,EAAD,CAAMd,OAAQZ,EAAMY,OAAQV,KAAMA,KAfpD,W","file":"component---src-pages-index-js-c93cf79c430efcbeb0b7.js","sourcesContent":["import React from 'react';\nimport { graphql, withPrefix, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport SEO from '../components/SEO';\nimport Layout from '../layouts/index';\nimport Call from '../components/Call';\n\nconst Home = (props) => {\n  const markdown = props.data.allMarkdownRemark.edges;\n  const json = props.data.allFeaturesJson.edges;\n  return (\n    <Layout bodyClass=\"page-home\">\n      <SEO title=\"Home\" />\n      <Helmet>\n        <meta\n          name=\"description\"\n          content=\"Small Business Theme. Multiple content types using Markdown and JSON sources. Responsive design and SCSS. This is a beautiful and artfully designed starting theme.\"\n        />\n      </Helmet>\n      <div className=\"intro pb-4\">\n        <div className=\"container\">\n          <h1>Serif - Gatsby Small Business Theme.</h1>\n          <p>\n            Multiple content types using Markdown and JSON sources. Responsive design and SCSS. This\n            is a beautiful and artfully designed starting theme.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"container pt-2\">\n        <Call button />\n      </div>\n\n      <div className=\"container pt-8 pt-md-10\">\n        <div className=\"row justify-content-start\">\n          <div className=\"col-12\">\n            <h2 className=\"title-3 text-dark mb-3\">Our Services</h2>\n          </div>\n          {markdown.map(edge => (\n            <div key={edge.node.frontmatter.path} className=\"col-12 col-md-4 mb-1\">\n              <div className=\"card service service-teaser\">\n                <div className=\"card-content\">\n                  <h2>\n                    <Link to={edge.node.frontmatter.path}>{edge.node.frontmatter.title}</Link>\n                  </h2>\n                  <p>{edge.node.excerpt}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n          <div className=\"col-12 text-center\">\n            <Link className=\"button button-primary mt-2\" to=\"/services\">\n              View All Services\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container pt-5 pb-5 pt-md-7 pb-md-7\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <h2 className=\"title-3 text-dark mb-4\">Our Features</h2>\n          </div>\n          {json.map(edge => (\n            <div key={edge.node.id} className=\"col-12 col-md-6 col-lg-4 mb-2\">\n              <div className=\"feature\">\n                {edge.node.image && (\n                  <div className=\"feature-image\">\n                    <img src={withPrefix(edge.node.image)} />\n                  </div>\n                )}\n                <h2 className=\"feature-title\">{edge.node.title}</h2>\n                <div className=\"feature-content\">{edge.node.description}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/services/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            path\n            title\n            date(formatString: \"DD MMMM YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n    allFeaturesJson {\n      edges {\n        node {\n          id\n          title\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport default Home;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst Call = props => (\n  <div className=\"call\">\n    <div className=\"call-box-top\">\n      <div className=\"call-phone\">\n        <strong>Phone: </strong>\n        <a href={`tel:${props.data.site.siteMetadata.contact.phone}`}>\n        {props.data.site.siteMetadata.contact.phone}\n        </a>\n      </div>\n      <div className=\"call-email\">\n        <strong>Email: </strong>\n        <a href={`mailto:${props.data.site.siteMetadata.contact.email}`}>\n          {props.data.site.siteMetadata.contact.email}\n        </a>\n      </div>\n    </div>\n    {props.button && (\n      <div className=\"call-box-bottom\">\n        <a href=\"/contact\" className=\"button\">\n          Contact\n        </a>\n      </div>\n    )}\n  </div>\n);\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            contact {\n              email\n              phone\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Call button={props.button} data={data} />}\n  />\n);\n"],"sourceRoot":""}